name: Polybot Microservice Deployment

on:
  push:
    paths:
      - 'polybot/**'
    branches:
      - main

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v2

      - name: Build and push image
        run: |
          cd polybot
          
          # Login to DockerHub         
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

          # Build and push Docker image
          POLYBOT_IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/polybot:0.0.${{ github.run_number }}
          docker build -t $POLYBOT_IMAGE_NAME .
          docker push $POLYBOT_IMAGE_NAME

  Deploy:
    runs-on: ubuntu-latest
    needs:
      - Build

    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: Fetch EC2 Instance IP Addresses
        run: |
          EC2_POLYBOT_IP_ADDRESSES=$(aws ec2 describe-instances --region eu-west-2 --filters "Name=tag:Name,Values=*polybot*" --query 'Reservations[*].Instances[*].[PublicIpAddress]' --output text | grep -v 'None')
          echo "Deploying to IP addresses: $EC2_POLYBOT_IP_ADDRESSES"

      - name: Copy .env file to EC2 instances
        run: |
          # Path to your .env file locally
          ENV_FILE="./polybot/.env"

          # Loop through each EC2 instance IP address
          IFS=$'\n'
          for IP in $EC2_POLYBOT_IP_ADDRESSES; do
            echo "Copying .env file to $IP"
            scp -o StrictHostKeyChecking=no -i /path/to/your-key.pem $ENV_FILE ec2-user@$IP:/home/ec2-user/polybot/.env
          done

      - name: Deploy new version
        run: |
          POLYBOT_IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/polybot:0.0.${{ github.run_number }}

          # SSH into each instance and deploy the new Docker image
          IFS=$'\n'
          for IP in $EC2_POLYBOT_IP_ADDRESSES; do
            echo "Deploying to $IP"

            # SSH into the instance
            ssh -o StrictHostKeyChecking=no ec2-user@$IP << 'EOF'
              # Pull the latest Docker image
              docker pull $POLYBOT_IMAGE_NAME

              # Stop and remove the existing container if running
              docker stop polybot || true
              docker rm polybot || true

              # Run the new Docker container with .env file and auto-restart
              sudo docker run -d -p 8443:8443 --restart=always --name polybot --env-file /home/ec2-user/polybot/.env $POLYBOT_IMAGE_NAME
            EOF
          done
