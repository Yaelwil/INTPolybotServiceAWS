name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Fetch EC2 Instance IP Addresses
      id: fetch_ips
      run: |
        EC2_POLYBOT_IP_ADDRESSES=$(aws ec2 describe-instances --region eu-west-2 --filters "Name=tag:Name,Values=*polybot*" --query 'Reservations[*].Instances[*].[PublicIpAddress]' --output text | grep -v 'None')
        echo "Deploying to IP addresses: $EC2_POLYBOT_IP_ADDRESSES"
        echo "::set-output name=ips::$EC2_POLYBOT_IP_ADDRESSES"

    - name: Copy .env file to EC2 instances
      run: |
        ENV_FILE="./polybot/.env"
        IP_ADDRESSES="${{ steps.fetch_ips.outputs.ips }}"

        for IP in $IP_ADDRESSES; do
          echo "Copying .env file to $IP"
          scp -o StrictHostKeyChecking=no -i /path/to/your-key.pem $ENV_FILE ec2-user@$IP:/home/ec2-user/polybot/.env
        done

    - name: Deploy new version
      run: |
        POLYBOT_IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/polybot:0.0.${{ github.run_number }}
        IP_ADDRESSES="${{ steps.fetch_ips.outputs.ips }}"

        for IP in $IP_ADDRESSES; do
          echo "Deploying to $IP"
          ssh -o StrictHostKeyChecking=no ec2-user@$IP << EOF
            docker pull $POLYBOT_IMAGE_NAME
            docker stop polybot || true
            docker rm polybot || true
            docker run -d -p 8443:8443 --restart=always --name polybot --env-file /home/ec2-user/polybot/.env $POLYBOT_IMAGE_NAME
          EOF
        done
